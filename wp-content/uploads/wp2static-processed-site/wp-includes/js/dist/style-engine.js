(function(){"use strict";var __webpack_require__={};!function(){__webpack_require__.d=function(exports,definition){for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]});}}};}();!function(){__webpack_require__.o=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop);}}();!function(){__webpack_require__.r=function(exports){if(typeof Symbol!=='undefined'&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:'Module'});}
Object.defineProperty(exports,'__esModule',{value:true});};}();var __webpack_exports__={};__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"compileCSS":function(){return compileCSS;},"getCSSRules":function(){return getCSSRules;}});;var external_lodash_namespaceObject=window["lodash"];;const VARIABLE_REFERENCE_PREFIX='var:';const VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE='|';const VARIABLE_PATH_SEPARATOR_TOKEN_STYLE='--';;function generateRule(style,options,path,ruleKey){const styleValue=(0,external_lodash_namespaceObject.get)(style,path);return styleValue?[{selector:options===null||options===void 0?void 0:options.selector,key:ruleKey,value:getCSSVarFromStyleValue(styleValue)}]:[];}
function generateBoxRules(style,options,path,ruleKeys){let individualProperties=arguments.length>4&&arguments[4]!==undefined?arguments[4]:['top','right','bottom','left'];const boxStyle=(0,external_lodash_namespaceObject.get)(style,path);if(!boxStyle){return[];}
const rules=[];if(typeof boxStyle==='string'){rules.push({selector:options===null||options===void 0?void 0:options.selector,key:ruleKeys.default,value:boxStyle});}else{const sideRules=individualProperties.reduce((acc,side)=>{const value=getCSSVarFromStyleValue((0,external_lodash_namespaceObject.get)(boxStyle,[side]));if(value){acc.push({selector:options===null||options===void 0?void 0:options.selector,key:ruleKeys===null||ruleKeys===void 0?void 0:ruleKeys.individual.replace('%s',upperFirst(side)),value});}
return acc;},[]);rules.push(...sideRules);}
return rules;}
function getCSSVarFromStyleValue(styleValue){if(typeof styleValue==='string'&&styleValue.startsWith(VARIABLE_REFERENCE_PREFIX)){const variable=styleValue.slice(VARIABLE_REFERENCE_PREFIX.length).split(VARIABLE_PATH_SEPARATOR_TOKEN_ATTRIBUTE).map(presetVariable=>(0,external_lodash_namespaceObject.kebabCase)(presetVariable)).join(VARIABLE_PATH_SEPARATOR_TOKEN_STYLE);return `var(--wp--${variable})`;}
return styleValue;}
function upperFirst(string){const[firstLetter,...rest]=string;return firstLetter.toUpperCase()+rest.join('');}
function camelCaseJoin(strings){const[firstItem,...rest]=strings;return firstItem.toLowerCase()+rest.map(upperFirst).join('');};function createBorderGenerateFunction(path){return(style,options)=>generateRule(style,options,path,camelCaseJoin(path));}
function createBorderEdgeGenerateFunction(edge){return(style,options)=>{return['color','style','width'].flatMap(key=>{const path=['border',edge,key];return createBorderGenerateFunction(path)(style,options);});};}
const color={name:'color',generate:createBorderGenerateFunction(['border','color'])};const radius={name:'radius',generate:(style,options)=>{return generateBoxRules(style,options,['border','radius'],{default:'borderRadius',individual:'border%sRadius'},['topLeft','topRight','bottomLeft','bottomRight']);}};const borderStyle={name:'style',generate:createBorderGenerateFunction(['border','style'])};const width={name:'width',generate:createBorderGenerateFunction(['border','width'])};const borderTop={name:'borderTop',generate:createBorderEdgeGenerateFunction('top')};const borderRight={name:'borderRight',generate:createBorderEdgeGenerateFunction('right')};const borderBottom={name:'borderBottom',generate:createBorderEdgeGenerateFunction('bottom')};const borderLeft={name:'borderLeft',generate:createBorderEdgeGenerateFunction('left')};var border=([color,borderStyle,width,radius,borderTop,borderRight,borderBottom,borderLeft]);;const background={name:'background',generate:(style,options)=>{return generateRule(style,options,['color','background'],'backgroundColor');}};var color_background=(background);;const gradient={name:'gradient',generate:(style,options)=>{return generateRule(style,options,['color','gradient'],'background');}};var color_gradient=(gradient);;const text_text={name:'text',generate:(style,options)=>{return generateRule(style,options,['color','text'],'color');}};var color_text=(text_text);;var styles_color=([color_text,color_gradient,color_background]);;const minHeight={name:'minHeight',generate:(style,options)=>{return generateRule(style,options,['dimensions','minHeight'],'minHeight');}};var dimensions=([minHeight]);;const shadow={name:'shadow',generate:(style,options)=>{return generateRule(style,options,['shadow'],'boxShadow');}};var styles_shadow=([shadow]);;const outline_color={name:'color',generate:function(style,options){let path=arguments.length>2&&arguments[2]!==undefined?arguments[2]:['outline','color'];let ruleKey=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'outlineColor';return generateRule(style,options,path,ruleKey);}};const offset={name:'offset',generate:function(style,options){let path=arguments.length>2&&arguments[2]!==undefined?arguments[2]:['outline','offset'];let ruleKey=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'outlineOffset';return generateRule(style,options,path,ruleKey);}};const outlineStyle={name:'style',generate:function(style,options){let path=arguments.length>2&&arguments[2]!==undefined?arguments[2]:['outline','style'];let ruleKey=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'outlineStyle';return generateRule(style,options,path,ruleKey);}};const outline_width={name:'width',generate:function(style,options){let path=arguments.length>2&&arguments[2]!==undefined?arguments[2]:['outline','width'];let ruleKey=arguments.length>3&&arguments[3]!==undefined?arguments[3]:'outlineWidth';return generateRule(style,options,path,ruleKey);}};var outline=([outline_color,outlineStyle,offset,outline_width]);;const padding={name:'padding',generate:(style,options)=>{return generateBoxRules(style,options,['spacing','padding'],{default:'padding',individual:'padding%s'});}};var spacing_padding=(padding);;const margin={name:'margin',generate:(style,options)=>{return generateBoxRules(style,options,['spacing','margin'],{default:'margin',individual:'margin%s'});}};var spacing_margin=(margin);;var spacing=([spacing_margin,spacing_padding]);;const fontSize={name:'fontSize',generate:(style,options)=>{return generateRule(style,options,['typography','fontSize'],'fontSize');}};const fontStyle={name:'fontStyle',generate:(style,options)=>{return generateRule(style,options,['typography','fontStyle'],'fontStyle');}};const fontWeight={name:'fontWeight',generate:(style,options)=>{return generateRule(style,options,['typography','fontWeight'],'fontWeight');}};const fontFamily={name:'fontFamily',generate:(style,options)=>{return generateRule(style,options,['typography','fontFamily'],'fontFamily');}};const letterSpacing={name:'letterSpacing',generate:(style,options)=>{return generateRule(style,options,['typography','letterSpacing'],'letterSpacing');}};const lineHeight={name:'letterSpacing',generate:(style,options)=>{return generateRule(style,options,['typography','lineHeight'],'lineHeight');}};const textColumns={name:'textColumns',generate:(style,options)=>{return generateRule(style,options,['typography','textColumns'],'columnCount');}};const textDecoration={name:'textDecoration',generate:(style,options)=>{return generateRule(style,options,['typography','textDecoration'],'textDecoration');}};const textTransform={name:'textTransform',generate:(style,options)=>{return generateRule(style,options,['typography','textTransform'],'textTransform');}};var typography=([fontFamily,fontSize,fontStyle,fontWeight,letterSpacing,lineHeight,textColumns,textDecoration,textTransform]);;const styleDefinitions=[...border,...styles_color,...dimensions,...outline,...spacing,...typography,...styles_shadow];;function compileCSS(style){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const rules=getCSSRules(style,options);if(!(options!==null&&options!==void 0&&options.selector)){const inlineRules=[];rules.forEach(rule=>{inlineRules.push(`${(0,external_lodash_namespaceObject.kebabCase)(rule.key)}: ${rule.value};`);});return inlineRules.join(' ');}
const groupedRules=(0,external_lodash_namespaceObject.groupBy)(rules,'selector');const selectorRules=Object.keys(groupedRules).reduce((acc,subSelector)=>{acc.push(`${subSelector} { ${groupedRules[subSelector].map(rule=>`${(0,external_lodash_namespaceObject.kebabCase)(rule.key)}: ${rule.value};`).join(' ')} }`);return acc;},[]);return selectorRules.join('\n');}
function getCSSRules(style){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const rules=[];styleDefinitions.forEach(definition=>{if(typeof definition.generate==='function'){rules.push(...definition.generate(style,options));}});return rules;}
(window.wp=window.wp||{}).styleEngine=__webpack_exports__;})();