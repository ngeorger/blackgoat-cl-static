;(function($,window,document,undefined){var pluginName="flatWeatherPlugin";var defaults={location:"Boston, MA",country:"USA",zmw:"02108.1.99999",displayCityNameOnly:false,api:"darksky",forecast:5,apikey:"",latitude:"",longitude:"",view:"full",render:false,loadingAnimation:true,strings:{days:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],min:"Min",max:"Max",direction:["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW"]},timeformat:"12",lang:"EN"};var apiurls={"openweathermap":["https://api.openweathermap.org/data/2.5/weather","https://api.openweathermap.org/data/2.5/forecast/daily"],"wunderground":["https://api.wunderground.com/api/apikey/conditions/forecast/astronomy/"],"darksky":["https://api.darksky.net/forecast/apikey/"],};function Plugin(element,options){this.element=element;this.settings=$.extend({},defaults,options);if(!this.settings.units||this.settings.units=="auto"){this.settings.units=(["united states","usa","united states of america","us"].indexOf(this.settings.country.toLowerCase())==-1)?"metric":"imperial";}
this.settings.forecast=Math.min(this.settings.forecast,5);if(this.settings.api=="wunderground")this.settings.forecast=Math.min(this.settings.forecast,3);this._name=pluginName;this.once=false;this.init();};$.extend(Plugin.prototype,{init:function(){if(this.settings.render){if(this.settings.loadingAnimation&&!this.once){this.loading=$("<div/>",{"id":"flatWeatherLoading","class":"wi loading"});this.loading.appendTo(this.element);}
this.fetchWeather().then(this.render,this.error);}
this.once=true;},fetchWeather:function(){var that=this;var promise=new $.Deferred();var params=[];var location=this.settings.location+" "+this.settings.country;if(this.settings.api=="openweathermap"){var parameters={};if(this.settings.lat&&this.settings.lon){parameters.lat=this.settings.lat;parameters.lon=this.settings.lon;}else{parameters.q=location;}
parameters.units=this.settings.units;if(this.settings.apikey)parameters.appid=this.settings.apikey;if(this.settings.lang)parameters.lang=this.settings.lang;params.push(parameters);parameters.cnt=this.settings.forecast+1;params.push(parameters);}
else if(this.settings.api=="wunderground"){apiurls[this.settings.api][0]=apiurls[this.settings.api][0].replace(/apikey/,this.settings.apikey);}
else if(this.settings.api=="darksky"){apiurls[this.settings.api][0]=apiurls[this.settings.api][0].replace(/apikey/,this.settings.apikey);}
var requests=[];for(var i=0;i<apiurls[this.settings.api].length;i++){if(this.settings.api=="wunderground"){requests.push($.get(apiurls[this.settings.api][i]+"lang:"+this.settings.lang+"/q/zmw:"+this.settings.zmw+".json"));}else if(this.settings.api=="darksky"){requests.push($.get(apiurls[this.settings.api][i]+this.settings.latitude+","+this.settings.longitude));}
else{requests.push($.get(apiurls[this.settings.api][i],params[i]));}}
$.when.apply(this,requests).done(function(){var args=Array.prototype.slice.call(arguments);if(requests.length>1){args=args.map(function(val){return val[0]});}
else{args=args[0];}
if(that.settings.api=="openweathermap"&&!(args[0].cod=="200"&&args[1].cod=="200")){console.log("Error interacting with the openweathermap api see error object below for details:");console.log(args);promise.reject(args,that);}
else if(that.settings.api=="wunderground"&&args.response&&args.response.error){console.log("Error interacting with the wunderground api see error object below for details:");console.log(args);promise.reject(args,that);}
else if(that.settings.api=="darksky"&&args.status==403){console.log("Error authenticating with the darkmap api see error object below for details:");console.log(args);promise.reject(args,that);}
else{var weather=datamapper(args,that.settings);that._weather=weather;$.data(that.element,"weather",weather);promise.resolve(weather,that);}}).fail(function(error){promise.reject(error,that);});return promise;},error:function(error,context){if(!context){context=this;}
if(context.settings.loadingAnimation&&context.settings.render){context.loading.remove();}
if(context.settings.api=="openweathermap"){if(error.responseJSON.cod!="200"){error=error.responseJSON.cod+" "+error.responseJSON.message+" See console log for details.";}
else{error=error.responseJSON.message+" See console log for details.";}}
else if(context.settings.api=="wunderground"){error=error.response.error.type+" See console log for details.";}
else{error="Sorry, the weather service is currently down. Please try again later.";}
var div=$("<div/>",{"class":"flatWeatherPlugin "+context.settings.view});$("<h2/>").text("Error").appendTo(div);$("<p/>").text(error).appendTo(div);$(context.element).html(div);return $(context.element);},render:function(weather,context){if(!context){context=this;weather=this._weather;}
var degrees=context.settings.units=="metric"?"&#176;C":"&#176;F";if(context.settings.loadingAnimation&&context.settings.render){context.loading.remove();}
var div=$("<div/>",{"class":"flatWeatherPlugin "+context.settings.view});if(context.settings.displayCityNameOnly){$("<h2/>").text(weather.city).appendTo(div);}
else{$("<h2/>").text(weather.location).appendTo(div);}
if(context.settings.view!="forecast"){var today=$("<div/>",{"class":"wiToday"});var iconGroup=$("<div/>",{"class":"wiIconGroup"});$("<div/>",{"class":"wi "+"wi"+weather.today.code}).appendTo(iconGroup);$("<p/>",{"class":"wiText"}).text(weather.today.desc).appendTo(iconGroup);iconGroup.appendTo(today);$("<p/>",{"class":"wiTemperature"}).html(weather.today.temp.now+"<sup>"+degrees+"</sup>").appendTo(today);today.appendTo(div);}
if(context.settings.view!="simple"){var detail=$("<div/>",{"class":"wiDetail"});if(context.settings.view=="partial"){$("<p/>",{"class":"wiDay"}).text(weather.today.day).appendTo(today);}
if(context.settings.view!="partial"){if(context.settings.view!="today"){$("<p/>",{"class":"wiDay"}).text(weather.today.day).appendTo(detail);}
var astro=$("<ul/>",{"class":"astronomy"}).appendTo(detail);$("<li/>",{"class":"wi sunrise"}).text(weather.today.sunrise).appendTo(astro);$("<li/>",{"class":"wi sunset"}).text(weather.today.sunset).appendTo(astro);var temp=$("<ul/>",{"class":"temp"}).appendTo(detail);$("<li/>").html(context.settings.strings.max+": "+weather.today.temp.max+"<sup>"+degrees+"</sup>").appendTo(temp);$("<li/>").html(context.settings.strings.min+": "+weather.today.temp.min+"<sup>"+degrees+"</sup>").appendTo(temp);var atmo=$("<ul/>",{"class":"atmosphere"}).appendTo(detail);$("<li/>",{"class":"wi humidity"}).text(weather.today.humidity).appendTo(atmo);$("<li/>",{"class":"wi pressure"}).text(weather.today.pressure).appendTo(atmo);$("<li/>",{"class":"wi wind"}).text(formatWind(weather.today.wind.speed,weather.today.wind.deg,context.settings.units,context.settings.strings.direction)).appendTo(atmo);detail.appendTo(today);}
if(context.settings.view!="today"||context.settings.view=="forecast"){var forecast=$("<ul/>",{"class":"wiForecasts"});var startingIndex=(context.settings.view=="forecast")?0:1;for(var i=startingIndex;i<weather.forecast.length;i++){var day=$("<li/>",{"class":"wiDay"}).html("<span>"+weather.forecast[i].day+"</span>").appendTo(forecast);var sub=$("<ul/>",{"class":"wiForecast"}).appendTo(day);$("<li/>",{"class":"wi "+"wi"+weather.forecast[i].code}).appendTo(sub);$("<li/>",{"class":"wiMax"}).html(weather.forecast[i].temp.max+"<sup>"+degrees+"</sup>").appendTo(sub);$("<li/>",{"class":"wiMin"}).html(weather.forecast[i].temp.min+"<sup>"+degrees+"</sup>").appendTo(sub);}
forecast.appendTo(div);}}
$(context.element).html(div);return $(context.element);}});$.fn[pluginName]=function(options,args){if($.isFunction(Plugin.prototype[options])){return this.data("plugin_"+pluginName)[options](args);}
return this.each(function(){if(!$.data(this,"plugin_"+pluginName)){var plugin=new Plugin(this,options);return $.data(this,"plugin_"+pluginName,plugin);}});};function datamapper(input,settings){var out={};if(settings.api=="openweathermap"){if(input[0].name!=""){out.location=input[0].name+", "+input[0].sys.country;out.city=input[0].name;}
else if(input[1].city.name!=""){out.location=input[1].city.name+", "+input[1].city.country;out.city=input[1].city.name;}
else{out.location=settings.location+", "+settings.country;out.city=settings.location;}
out.today={};out.today.temp={};out.today.temp.now=Math.round(input[0].main.temp);out.today.temp.min=Math.round(input[0].main.temp_min);out.today.temp.max=Math.round(input[0].main.temp_max);out.today.desc=input[0].weather[0].description.capitalize();out.today.code=input[0].weather[0].id;out.today.wind=input[0].wind;out.today.humidity=input[0].main.humidity;out.today.pressure=input[0].main.pressure;out.today.sunrise=epochToHours(input[0].sys.sunrise,settings.timeformat);out.today.sunset=epochToHours(input[0].sys.sunset,settings.timeformat);out.today.day=getDayString(new Date(),settings.strings.days);out.forecast=[];for(var i=0;i<settings.forecast;i++){var forecast={};forecast.day=getDayString(new Date(input[1].list[i].dt*1000),settings.strings.days);forecast.code=input[1].list[i].weather[0].id;forecast.desc=input[1].list[i].weather[0].description.capitalize();forecast.temp={max:Math.round(input[1].list[i].temp.max),min:Math.round(input[1].list[i].temp.min)}
out.forecast.push(forecast);}}
else if(settings.api=="darksky"){out.location=settings.location;out.today={};out.today.temp={};out.today.temp.now=Math.round(input.currently.temperature);out.today.temp.min=Math.round(input.daily.data[0].temperatureMin);out.today.temp.max=Math.round(input.daily.data[0].temperatureMax);out.today.desc=input.daily.data[0].summary.capitalize();var codes={'clear-day':'800','clear-night':'800','rain':'521','snow':'601','sleet':'611','wind':'954','fog':'741','cloudy':'802','partly-cloudy-day':'802','partly-cloudy-night':'800','hail':'906','thunderstorm':'200','tornado':'900',}
out.today.code=codes[input.currently.icon];out.today.wind={}
out.today.wind.speed=input.currently.windSpeed;out.today.wind.deg=input.currently.windBearing;out.today.humidity=input.currently.humidity;out.today.pressure=input.currently.pressure;out.today.sunrise=epochToHours(input.daily.data[0].sunriseTime);out.today.sunset=epochToHours(input.daily.data[0].sunsetTime);out.today.day=getDayString(new Date(),settings.strings.days);out.forecast=[];for(var i=0;i<settings.forecast;i++){var forecast={};forecast.day=getDayString(new Date(input.daily.data[i].time*1000),settings.strings.days);forecast.code=codes[input.daily.data[i].icon];forecast.desc=input.daily.data[i].summary.capitalize();forecast.temp={max:Math.round(input.daily.data[i].temperatureMax),min:Math.round(input.daily.data[i].temperatureMin)}
out.forecast.push(forecast);}}
else if(settings.api=="wunderground"){var codes={chanceflurries:"600",chancerain:"500",chancesleet:"611",chancesnow:"600",chancetstorms:"200",clear:"800",cloudy:"802",flurries:"600",fog:"741",hazy:"721",mostlycloudy:"802",mostlysunny:"802",partlycloudy:"802",partlysunny:"802",sleet:"611",rain:"501",snow:"601",sunny:"800",tstorms:"211",unknown:"951",};out.location=input.current_observation.display_location.full;out.city=input.current_observation.display_location.city;out.today={};out.today.temp={};if(settings.units=="metric"){out.today.temp.now=Math.round(input.current_observation.temp_c);out.today.temp.min=Math.round(input.forecast.simpleforecast.forecastday[0].low.celsius);out.today.temp.max=Math.round(input.forecast.simpleforecast.forecastday[0].high.celsius);}
else{out.today.temp.now=Math.round(input.current_observation.temp_f);out.today.temp.min=Math.round(input.forecast.simpleforecast.forecastday[0].low.fahrenheit);out.today.temp.max=Math.round(input.forecast.simpleforecast.forecastday[0].high.fahrenheit);}
out.today.desc=input.current_observation.weather;out.today.code=codes[input.current_observation.icon];out.today.wind={};if(settings.units=="metric"){out.today.wind.speed=input.current_observation.wind_kph;}
else{out.today.wind.speed=input.current_observation.wind_mph;}
out.today.wind.deg=input.current_observation.wind_degrees;out.today.humidity=input.current_observation.relative_humidity;if(settings.units=="metric"){out.today.pressure=input.current_observation.pressure_mb;}
else{out.today.pressure=input.current_observation.pressure_in;}
var sunrise_minutes=input.sun_phase.sunrise.minute;var sunset_minutes=input.sun_phase.sunset.minute;if(settings.timeformat=="12"){out.today.sunrise=input.sun_phase.sunrise.hour+":"+sunrise_minutes+" AM";var hours=input.sun_phase.sunset.hour%12;hours=hours?hours:12;out.today.sunset=hours+":"+sunset_minutes+" PM";}
else{out.today.sunrise=input.sun_phase.sunrise.hour+":"+sunrise_minutes;out.today.sunset=input.sun_phase.sunset.hour+":"+sunset_minutes;}
out.today.day=getDayString(new Date(),settings.strings.days);out.forecast=[];for(var i=0;i<settings.forecast+1;i++){var forecast={};forecast.day=getDayString(new Date(input.forecast.simpleforecast.forecastday[i].date.epoch*1000),settings.strings.days);forecast.code=codes[input.forecast.simpleforecast.forecastday[i].icon];forecast.desc=input.forecast.simpleforecast.forecastday[i].conditions;if(settings.units=="metric"){forecast.temp={max:Math.round(input.forecast.simpleforecast.forecastday[i].high.celsius),min:Math.round(input.forecast.simpleforecast.forecastday[i].low.celsius)}}
else{forecast.temp={max:Math.round(input.forecast.simpleforecast.forecastday[i].high.fahrenheit),min:Math.round(input.forecast.simpleforecast.forecastday[i].low.fahrenheit)}}
out.forecast.push(forecast);}}
return out;};String.prototype.capitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1);};function getDayString(date,days){return days[date.getDay()];};function epochToHours(date,timeformat){date=new Date(date*1000);var hours=date.getHours();var minutes=date.getMinutes();var ampm=hours>=12?'PM':'AM';if(timeformat=="24"){ampm="";hours=hours<10?'0'+hours:hours;}
if(timeformat=="12")hours=hours%12;hours=hours?hours:12;minutes=minutes<10?'0'+minutes:minutes;var strTime=hours+':'+minutes+' '+ampm;return strTime;};function formatWind(speed,degrees,units,direction){var wd=degrees;if((wd>=0&&wd<=11.25)||(wd>348.75&&wd<=360)){wd=direction[0];}
else if(wd>11.25&&wd<=33.75){wd=direction[1];}
else if(wd>33.75&&wd<=56.25){wd=direction[2];}
else if(wd>56.25&&wd<=78.75){wd=direction[3];}
else if(wd>78.75&&wd<=101.25){wd=direction[4];}
else if(wd>101.25&&wd<=123.75){wd=direction[5];}
else if(wd>123.75&&wd<=146.25){wd=direction[6];}
else if(wd>146.25&&wd<=168.75){wd=direction[7];}
else if(wd>168.75&&wd<=191.25){wd=direction[8];}
else if(wd>191.25&&wd<=213.75){wd=direction[9];}
else if(wd>213.75&&wd<=236.25){wd=direction[10];}
else if(wd>236.25&&wd<=258.75){wd=direction[11];}
else if(wd>258.75&&wd<=281.25){wd=direction[12];}
else if(wd>281.25&&wd<=303.75){wd=direction[13];}
else if(wd>303.75&&wd<=326.25){wd=direction[14];}
else if(wd>326.25&&wd<=348.75){wd=direction[15];}
if(!wd)wd="";var speedUnits=(units=="metric")?"km/h":"mph";return wd+" "+speed+" "+speedUnits;};})(jQuery,window,document);