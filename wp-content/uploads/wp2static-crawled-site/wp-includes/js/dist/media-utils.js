(function(){"use strict";var __webpack_require__={};!function(){__webpack_require__.n=function(module){var getter=module&&module.__esModule?function(){return module['default'];}:function(){return module;};__webpack_require__.d(getter,{a:getter});return getter;};}();!function(){__webpack_require__.d=function(exports,definition){for(var key in definition){if(__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)){Object.defineProperty(exports,key,{enumerable:true,get:definition[key]});}}};}();!function(){__webpack_require__.o=function(obj,prop){return Object.prototype.hasOwnProperty.call(obj,prop);}}();!function(){__webpack_require__.r=function(exports){if(typeof Symbol!=='undefined'&&Symbol.toStringTag){Object.defineProperty(exports,Symbol.toStringTag,{value:'Module'});}
Object.defineProperty(exports,'__esModule',{value:true});};}();var __webpack_exports__={};__webpack_require__.r(__webpack_exports__);__webpack_require__.d(__webpack_exports__,{"MediaUpload":function(){return media_upload;},"uploadMedia":function(){return uploadMedia;}});;var external_wp_element_namespaceObject=window["wp"]["element"];;var external_wp_i18n_namespaceObject=window["wp"]["i18n"];;const DEFAULT_EMPTY_GALLERY=[];const getFeaturedImageMediaFrame=()=>{const{wp}=window;return wp.media.view.MediaFrame.Select.extend({featuredImageToolbar(toolbar){this.createSelectToolbar(toolbar,{text:wp.media.view.l10n.setFeaturedImage,state:this.options.state});},editState(){const selection=this.state('featured-image').get('selection');const view=new wp.media.view.EditImage({model:selection.single(),controller:this}).render();this.content.set(view);view.loadEditor();},createStates:function createStates(){this.on('toolbar:create:featured-image',this.featuredImageToolbar,this);this.on('content:render:edit-image',this.editState,this);this.states.add([new wp.media.controller.FeaturedImage(),new wp.media.controller.EditImage({model:this.options.editImage})]);}});};const getGalleryDetailsMediaFrame=()=>{const{wp}=window;return wp.media.view.MediaFrame.Post.extend({galleryToolbar(){const editing=this.state().get('editing');this.toolbar.set(new wp.media.view.Toolbar({controller:this,items:{insert:{style:'primary',text:editing?wp.media.view.l10n.updateGallery:wp.media.view.l10n.insertGallery,priority:80,requires:{library:true},click(){const controller=this.controller,state=controller.state();controller.close();state.trigger('update',state.get('library'));controller.setState(controller.options.state);controller.reset();}}}}));},editState(){const selection=this.state('gallery').get('selection');const view=new wp.media.view.EditImage({model:selection.single(),controller:this}).render();this.content.set(view);view.loadEditor();},createStates:function createStates(){this.on('toolbar:create:main-gallery',this.galleryToolbar,this);this.on('content:render:edit-image',this.editState,this);this.states.add([new wp.media.controller.Library({id:'gallery',title:wp.media.view.l10n.createGalleryTitle,priority:40,toolbar:'main-gallery',filterable:'uploaded',multiple:'add',editable:false,library:wp.media.query({type:'image',...this.options.library})}),new wp.media.controller.EditImage({model:this.options.editImage}),new wp.media.controller.GalleryEdit({library:this.options.selection,editing:this.options.editing,menu:'gallery',displaySettings:false,multiple:true}),new wp.media.controller.GalleryAdd()]);}});};const slimImageObject=img=>{const attrSet=['sizes','mime','type','subtype','id','url','alt','link','caption'];return attrSet.reduce((result,key)=>{if(img!==null&&img!==void 0&&img.hasOwnProperty(key)){result[key]=img[key];}
return result;},{});};const getAttachmentsCollection=ids=>{const{wp}=window;return wp.media.query({order:'ASC',orderby:'post__in',post__in:ids,posts_per_page:-1,query:true,type:'image'});};class MediaUpload extends external_wp_element_namespaceObject.Component{constructor(_ref){let{allowedTypes,gallery=false,unstableFeaturedImageFlow=false,modalClass,multiple=false,title=(0,external_wp_i18n_namespaceObject.__)('Select or Upload Media')}=_ref;super(...arguments);this.openModal=this.openModal.bind(this);this.onOpen=this.onOpen.bind(this);this.onSelect=this.onSelect.bind(this);this.onUpdate=this.onUpdate.bind(this);this.onClose=this.onClose.bind(this);const{wp}=window;if(gallery){this.buildAndSetGalleryFrame();}else{const frameConfig={title,multiple};if(!!allowedTypes){frameConfig.library={type:allowedTypes};}
this.frame=wp.media(frameConfig);}
if(modalClass){this.frame.$el.addClass(modalClass);}
if(unstableFeaturedImageFlow){this.buildAndSetFeatureImageFrame();}
this.initializeListeners();}
initializeListeners(){this.frame.on('select',this.onSelect);this.frame.on('update',this.onUpdate);this.frame.on('open',this.onOpen);this.frame.on('close',this.onClose);}
buildAndSetGalleryFrame(){const{addToGallery=false,allowedTypes,multiple=false,value=DEFAULT_EMPTY_GALLERY}=this.props;if(value===this.lastGalleryValue){return;}
const{wp}=window;this.lastGalleryValue=value;if(this.frame){this.frame.remove();}
let currentState;if(addToGallery){currentState='gallery-library';}else{currentState=value&&value.length?'gallery-edit':'gallery';}
if(!this.GalleryDetailsMediaFrame){this.GalleryDetailsMediaFrame=getGalleryDetailsMediaFrame();}
const attachments=getAttachmentsCollection(value);const selection=new wp.media.model.Selection(attachments.models,{props:attachments.props.toJSON(),multiple});this.frame=new this.GalleryDetailsMediaFrame({mimeType:allowedTypes,state:currentState,multiple,selection,editing:value&&value.length?true:false});wp.media.frame=this.frame;this.initializeListeners();}
buildAndSetFeatureImageFrame(){const{wp}=window;const featuredImageFrame=getFeaturedImageMediaFrame();const attachments=getAttachmentsCollection(this.props.value);const selection=new wp.media.model.Selection(attachments.models,{props:attachments.props.toJSON()});this.frame=new featuredImageFrame({mimeType:this.props.allowedTypes,state:'featured-image',multiple:this.props.multiple,selection,editing:this.props.value?true:false});wp.media.frame=this.frame;}
componentWillUnmount(){this.frame.remove();}
onUpdate(selections){const{onSelect,multiple=false}=this.props;const state=this.frame.state();const selectedImages=selections||state.get('selection');if(!selectedImages||!selectedImages.models.length){return;}
if(multiple){onSelect(selectedImages.models.map(model=>slimImageObject(model.toJSON())));}else{onSelect(slimImageObject(selectedImages.models[0].toJSON()));}}
onSelect(){const{onSelect,multiple=false}=this.props;const attachment=this.frame.state().get('selection').toJSON();onSelect(multiple?attachment:attachment[0]);}
onOpen(){const{wp}=window;const{value}=this.props;this.updateCollection();if(this.props.mode){this.frame.content.mode(this.props.mode);}
const hasMedia=Array.isArray(value)?!!(value!==null&&value!==void 0&&value.length):!!value;if(!hasMedia){return;}
const isGallery=this.props.gallery;const selection=this.frame.state().get('selection');const valueArray=Array.isArray(value)?value:[value];if(!isGallery){valueArray.forEach(id=>{selection.add(wp.media.attachment(id));});}
const attachments=getAttachmentsCollection(valueArray);attachments.more().done(function(){var _attachments$models;if(isGallery&&attachments!==null&&attachments!==void 0&&(_attachments$models=attachments.models)!==null&&_attachments$models!==void 0&&_attachments$models.length){selection.add(attachments.models);}});}
onClose(){const{onClose}=this.props;if(onClose){onClose();}}
updateCollection(){const frameContent=this.frame.content.get();if(frameContent&&frameContent.collection){const collection=frameContent.collection;collection.toArray().forEach(model=>model.trigger('destroy',model));collection.mirroring._hasMore=true;collection.more();}}
openModal(){if(this.props.gallery){this.buildAndSetGalleryFrame();}
this.frame.open();}
render(){return this.props.render({open:this.openModal});}}
var media_upload=(MediaUpload);;;var external_wp_apiFetch_namespaceObject=window["wp"]["apiFetch"];var external_wp_apiFetch_default=__webpack_require__.n(external_wp_apiFetch_namespaceObject);;var external_wp_blob_namespaceObject=window["wp"]["blob"];;const noop=()=>{};function getMimeTypesArray(wpMimeTypesObject){if(!wpMimeTypesObject){return wpMimeTypesObject;}
return Object.entries(wpMimeTypesObject).map(_ref=>{let[extensionsString,mime]=_ref;const[type]=mime.split('/');const extensions=extensionsString.split('|');return[mime,...extensions.map(extension=>`${type}/${extension}`)];}).flat();}
async function uploadMedia(_ref2){let{allowedTypes,additionalData={},filesList,maxUploadFileSize,onError=noop,onFileChange,wpAllowedMimeTypes=null}=_ref2;const files=[...filesList];const filesSet=[];const setAndUpdateFiles=(idx,value)=>{var _filesSet$idx;(0,external_wp_blob_namespaceObject.revokeBlobURL)((_filesSet$idx=filesSet[idx])===null||_filesSet$idx===void 0?void 0:_filesSet$idx.url);filesSet[idx]=value;onFileChange(filesSet.filter(Boolean));};const isAllowedType=fileType=>{if(!allowedTypes){return true;}
return allowedTypes.some(allowedType=>{if(allowedType.includes('/')){return allowedType===fileType;}
return fileType.startsWith(`${allowedType}/`);});};const allowedMimeTypesForUser=getMimeTypesArray(wpAllowedMimeTypes);const isAllowedMimeTypeForUser=fileType=>{return allowedMimeTypesForUser.includes(fileType);};const validFiles=[];for(const mediaFile of files){if(allowedMimeTypesForUser&&mediaFile.type&&!isAllowedMimeTypeForUser(mediaFile.type)){onError({code:'MIME_TYPE_NOT_ALLOWED_FOR_USER',message:(0,external_wp_i18n_namespaceObject.sprintf)((0,external_wp_i18n_namespaceObject.__)('%s: Sorry, you are not allowed to upload this file type.'),mediaFile.name),file:mediaFile});continue;}
if(mediaFile.type&&!isAllowedType(mediaFile.type)){onError({code:'MIME_TYPE_NOT_SUPPORTED',message:(0,external_wp_i18n_namespaceObject.sprintf)((0,external_wp_i18n_namespaceObject.__)('%s: Sorry, this file type is not supported here.'),mediaFile.name),file:mediaFile});continue;}
if(maxUploadFileSize&&mediaFile.size>maxUploadFileSize){onError({code:'SIZE_ABOVE_LIMIT',message:(0,external_wp_i18n_namespaceObject.sprintf)((0,external_wp_i18n_namespaceObject.__)('%s: This file exceeds the maximum upload size for this site.'),mediaFile.name),file:mediaFile});continue;}
if(mediaFile.size<=0){onError({code:'EMPTY_FILE',message:(0,external_wp_i18n_namespaceObject.sprintf)((0,external_wp_i18n_namespaceObject.__)('%s: This file is empty.'),mediaFile.name),file:mediaFile});continue;}
validFiles.push(mediaFile);filesSet.push({url:(0,external_wp_blob_namespaceObject.createBlobURL)(mediaFile)});onFileChange(filesSet);}
for(let idx=0;idx<validFiles.length;++idx){const mediaFile=validFiles[idx];try{var _savedMedia$caption$r,_savedMedia$caption;const savedMedia=await createMediaFromFile(mediaFile,additionalData);const{alt_text,source_url,...savedMediaProps}=savedMedia;const mediaObject={...savedMediaProps,alt:savedMedia.alt_text,caption:(_savedMedia$caption$r=(_savedMedia$caption=savedMedia.caption)===null||_savedMedia$caption===void 0?void 0:_savedMedia$caption.raw)!==null&&_savedMedia$caption$r!==void 0?_savedMedia$caption$r:'',title:savedMedia.title.raw,url:savedMedia.source_url};setAndUpdateFiles(idx,mediaObject);}catch(error){setAndUpdateFiles(idx,null);let message;if(error.message){message=error.message;}else{message=(0,external_wp_i18n_namespaceObject.sprintf)((0,external_wp_i18n_namespaceObject.__)('Error while uploading file %s to the media library.'),mediaFile.name);}
onError({code:'GENERAL',message,file:mediaFile});}}}
function createMediaFromFile(file,additionalData){const data=new window.FormData();data.append('file',file,file.name||file.type.replace('/','.'));if(additionalData){Object.entries(additionalData).forEach(_ref3=>{let[key,value]=_ref3;return data.append(key,value);});}
return external_wp_apiFetch_default()({path:'/wp/v2/media',body:data,method:'POST'});};;(window.wp=window.wp||{}).mediaUtils=__webpack_exports__;})();